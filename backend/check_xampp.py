"""
Verificador de Estado de XAMPP
==============================
Script para verificar si XAMPP est√° corriendo y proporcionar instrucciones
"""

import socket
import subprocess
import os
import sys
from pathlib import Path

def check_port(host, port):
    """Verificar si un puerto est√° abierto"""
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(2)
        result = sock.connect_ex((host, port))
        sock.close()
        return result == 0
    except:
        return False

def check_xampp_status():
    """Verificar el estado de XAMPP"""
    print("üîç VERIFICANDO ESTADO DE XAMPP")
    print("=" * 40)
    
    # Verificar puertos comunes de XAMPP
    ports_to_check = {
        3306: "MySQL",
        80: "Apache",
        443: "Apache (HTTPS)",
        8080: "Apache (Alternativo)"
    }
    
    all_services_running = True
    
    for port, service in ports_to_check.items():
        if check_port("localhost", port):
            print(f"‚úÖ {service} est√° corriendo en puerto {port}")
        else:
            print(f"‚ùå {service} NO est√° corriendo en puerto {port}")
            all_services_running = False
    
    print()
    
    if all_services_running:
        print("üéâ ¬°XAMPP est√° funcionando correctamente!")
        return True
    else:
        print("‚ö†Ô∏è  XAMPP no est√° corriendo completamente")
        print("\nüìã INSTRUCCIONES PARA INICIAR XAMPP:")
        print("1. Abre XAMPP Control Panel")
        print("2. Haz clic en 'Start' para Apache")
        print("3. Haz clic en 'Start' para MySQL")
        print("4. Verifica que ambos servicios est√©n en verde")
        print("5. Ejecuta este script nuevamente")
        
        # Intentar encontrar XAMPP
        xampp_paths = [
            "C:\\xampp\\xampp-control.exe",
            "C:\\xampp\\xampp_start.exe",
            "C:\\Program Files\\xampp\\xampp-control.exe",
            "C:\\Program Files (x86)\\xampp\\xampp-control.exe"
        ]
        
        xampp_found = False
        for path in xampp_paths:
            if os.path.exists(path):
                print(f"\nüìç XAMPP encontrado en: {path}")
                xampp_found = True
                break
        
        if not xampp_found:
            print("\n‚ùå XAMPP no encontrado en las ubicaciones comunes")
            print("Aseg√∫rate de que XAMPP est√© instalado")
        
        return False

def test_mysql_connection():
    """Probar conexi√≥n a MySQL"""
    print("\nüîå PROBANDO CONEXI√ìN A MYSQL")
    print("-" * 30)
    
    try:
        import mysql.connector
        from mysql.connector import Error
        
        connection = mysql.connector.connect(
            host="localhost",
            port=3306,
            user="root",
            password=""
        )
        
        if connection.is_connected():
            print("‚úÖ Conexi√≥n a MySQL exitosa")
            cursor = connection.cursor()
            cursor.execute("SELECT VERSION()")
            version = cursor.fetchone()
            print(f"üìä Versi√≥n de MySQL: {version[0]}")
            connection.close()
            return True
        else:
            print("‚ùå No se pudo conectar a MySQL")
            return False
            
    except ImportError:
        print("‚ùå mysql-connector-python no est√° instalado")
        print("Instala con: pip install mysql-connector-python")
        return False
    except Error as e:
        print(f"‚ùå Error conectando a MySQL: {e}")
        return False

def main():
    """Funci√≥n principal"""
    print("üîß VERIFICADOR DE XAMPP")
    print("=" * 50)
    print("Este script verifica si XAMPP est√° corriendo correctamente")
    print()
    
    # Verificar estado de XAMPP
    xampp_ok = check_xampp_status()
    
    if xampp_ok:
        # Probar conexi√≥n a MySQL
        mysql_ok = test_mysql_connection()
        
        if mysql_ok:
            print("\nüéâ ¬°Todo est√° listo!")
            print("Puedes ejecutar: python src/create_database_xampp.py")
        else:
            print("\n‚ùå MySQL no est√° disponible")
            print("Verifica que MySQL est√© iniciado en XAMPP")
    else:
        print("\n‚ùå XAMPP no est√° corriendo")
        print("Inicia XAMPP y ejecuta este script nuevamente")

if __name__ == "__main__":
    main() 